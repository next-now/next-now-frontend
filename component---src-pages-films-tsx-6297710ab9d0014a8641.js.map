{"version":3,"sources":["webpack:///./src/components/List/index.tsx","webpack:///./src/pages/films.tsx"],"names":["List","items","length","map","item","key","id","className","to","path","label","FilmsQuery","IndexPage","data","t","useTranslation","swapi","allFilms","film","title"],"mappings":"6FAAA,4BAiCeA,IAlBV,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACHA,EAAMC,OACJ,0BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,sBACEC,IAAKD,EAAKE,GACVC,UAAU,2DAEV,gBAAC,IAAD,CAAMC,GAAIJ,EAAKK,KAAMF,UAAU,qCAC5BH,EAAKM,YAMd,qBAAGH,UAAU,sBAAb,uB,kCC9BJ,0FASaI,EAAa,aAsCXC,UAhBV,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACEC,EAAMC,cAAND,EACR,OACE,gCACE,sBAAIP,UAAU,QAAQO,EAAE,UACxB,gBAAC,IAAD,CACEb,MAAOY,EAAKG,MAAMC,SAASd,KAAI,SAAAe,GAAI,MAAK,CACtCZ,GAAIY,EAAKZ,GACTI,MAAOQ,EAAKC,MACZV,KAAM,UAAUS,EAAKZ","file":"component---src-pages-films-tsx-6297710ab9d0014a8641.js","sourcesContent":["import * as React from 'react';\nimport Link from '../Link';\n\n/**\n * A simple list of links.\n */\nconst List: React.FC<{\n  /**\n   * List item definitions, containing a unique id, a label and a path.\n   */\n  items: {\n    id: string;\n    label: string;\n    path: string;\n  }[];\n}> = ({ items }) =>\n  items.length ? (\n    <ul>\n      {items.map(item => (\n        <li\n          key={item.id}\n          className=\"border-solid border-gray-300 border-b-2 last:border-b-0\"\n        >\n          <Link to={item.path} className=\"block px-5 py-2 hover:bg-gray-100\">\n            {item.label}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className=\"text-center italic\">No results found.</p>\n  );\n\nexport default List;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport List from '../components/List';\nimport { useTranslation } from 'react-i18next';\n\n// By exporting this query, we tell Gatsby to execute it with the context\n// variables provided as arguments and to fill it with the query result.\n// TODO: Learn about Gatsby's GraphQL layer.\n// https://www.gatsbyjs.org/docs/graphql-concepts/\nexport const FilmsQuery = graphql`\n  query FilmsQuery {\n    swapi {\n      allFilms {\n        id\n        title\n        episodeId\n      }\n    }\n  }\n`;\n\nconst IndexPage: React.FC<{\n  data: {\n    swapi: {\n      allFilms: {\n        id: string;\n        title: string;\n        episodeId: number;\n      }[];\n    };\n  };\n}> = ({ data }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <h1 className=\"mb-8\">{t('Films')}</h1>\n      <List\n        items={data.swapi.allFilms.map(film => ({\n          id: film.id,\n          label: film.title,\n          path: `/films/${film.id}`,\n        }))}\n      />\n    </>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}
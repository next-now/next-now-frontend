{"version":3,"sources":["webpack:///./src/pages/wallet/voteInitiative.tsx","webpack:///./src/components/Submit/index.tsx"],"names":["fetchInitiative","id","callback","setTimeout","fetch","method","mode","headers","redirect","referrerPolicy","then","response","json","body","VoteInitiativePage","t","useTranslation","window","pathNumber","location","pathname","split","pop","initiativeId","Number","useState","category","description","initiative","console","log","className","initialValues","onSubmit","values","actions","navigate","setSubmitting","text","Submit","type"],"mappings":"sLAsEMA,EAAkB,SACtBC,EACAC,GAEAC,YAAW,WACTC,MAAM,2CAA2CH,EAAM,CAErDI,OAAQ,MACRC,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,gBAEfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJX,EAASW,QAEZ,MAGUC,UA/EsB,WAAM,IACjCC,EAAMC,cAAND,EACR,GAAsB,oBAAXE,OACT,OAAO,iCAGT,IAAMC,EAAaD,OAAOE,SAASC,SAASC,MAAM,KAAKC,MACjDC,EAAuBC,OAAON,GAPK,EAQLO,mBAAS,CAC3CxB,GAAIsB,EACJG,SAAU,GACVC,YAAa,KAHRC,EARkC,UAczC5B,EAAgBuB,GAAc,SAACK,GAC7BA,EAAWF,SAAWE,EAAWF,SACjCE,EAAWD,YAAcC,EAAWD,YACpCE,QAAQC,IAAIF,MAuBd,OACE,gCACE,sBAAIG,UAAU,QAAQhB,EAAE,4BACxB,qBAAGgB,UAAU,QACVhB,EAAE,kEAEL,gBAAC,IAAD,CAAQiB,cAAeJ,EAAYK,SA1BtB,SAACC,EAAoBC,GACpChC,YAAW,WACTC,MAAM,qCAAqC8B,EAAOjC,GAAM,CAEtDI,OAAQ,OACRC,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,gBAEfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJuB,YAAS,cAEbD,EAAQE,eAAc,KACrB,QAUE,kBACC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQC,KAAK,+B,kCC9DzB,gBAkBeC,IAXV,SAAC,GAAa,IAAXD,EAAW,EAAXA,KACN,OACE,0BACEP,UAAU,mIACVS,KAAK,UAEJF","file":"component---src-pages-wallet-vote-initiative-tsx-286fa07b23b5beb45616.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form } from 'formik';\nimport Submit from '../../components/Submit';\nimport { navigate } from 'gatsby';\nimport { useState } from 'react';\n\ninterface Initiative {\n  id: number;\n  category: string;\n  description: string;\n}\n\nconst VoteInitiativePage: React.FC = () => {\n  const { t } = useTranslation();\n  if (typeof window === 'undefined') {\n    return <></>;\n  }\n\n  const pathNumber = window.location.pathname.split('/').pop();\n  const initiativeId: number = Number(pathNumber);\n  const [initiative, setInitiative] = useState({\n    id: initiativeId,\n    category: '',\n    description: '',\n  });\n\n  fetchInitiative(initiativeId, (initiative: Initiative) => {\n    initiative.category = initiative.category;\n    initiative.description = initiative.description;\n    console.log(initiative);\n  });\n\n  const onSubmit = (values: Initiative, actions: any) => {\n    setTimeout(() => {\n      fetch(`http://localhost:3000/api/v0/vote/${values.id}`, {\n        // TODO: extract host into an env var\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      })\n        .then(response => response.json())\n        .then(body => {\n          navigate('/wallet');\n        });\n      actions.setSubmitting(false);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <h1 className=\"mb-8\">{t('Vote for the initiative')}</h1>\n      <p className=\"mb-4\">\n        {t('Please vote for the initiative you decided to participate in.')}\n      </p>\n      <Formik initialValues={initiative} onSubmit={onSubmit}>\n        {() => (\n          <Form>\n            <Submit text=\"Vote for initiative\" />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst fetchInitiative = (\n  id: number,\n  callback: (response: Initiative) => void\n) => {\n  setTimeout(() => {\n    fetch(`http://localhost:3000/api/v0/initiative/${id}`, {\n      // TODO: extract host into an env var\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n    })\n      .then(response => response.json())\n      .then(body => {\n        callback(body);\n      });\n  }, 1000);\n};\n\nexport default VoteInitiativePage;\n","import * as React from 'react';\n\n/**\n * A simple submit component.\n */\nconst Submit: React.FC<{\n  text: string;\n}> = ({ text }) => {\n  return (\n    <button\n      className=\"flex items-center px-3 py-2 m-3 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white bg-nextnow-dark\"\n      type=\"submit\"\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Submit;\n"],"sourceRoot":""}
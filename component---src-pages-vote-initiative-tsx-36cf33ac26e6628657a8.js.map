{"version":3,"sources":["webpack:///./src/pages/voteInitiative.tsx"],"names":["VoteInitiativePage","t","useTranslation","window","className"],"mappings":"6FAAA,mCA8FeA,UAjFsB,WAAM,IACjCC,EAAMC,cAAND,EACR,MAAsB,oBAAXE,OACF,iCAuCP,gCACE,sBAAIC,UAAU,QAAQH,EAAE,4BACxB,qBAAGG,UAAU,QACVH,EAAE,kEAEL","file":"component---src-pages-vote-initiative-tsx-36cf33ac26e6628657a8.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form } from 'formik';\nimport Submit from '../components/Submit';\nimport { navigate } from 'gatsby';\nimport { useState } from 'react';\n\ninterface Initiative {\n  id: number;\n  category: string;\n  description: string;\n}\n\nconst VoteInitiativePage: React.FC = () => {\n  const { t } = useTranslation();\n  if (typeof window === 'undefined') {\n    return <></>;\n  }\n\n  // const pathNumber = window.location.pathname.split('/').pop();\n  // const initiativeId: number = Number(pathNumber);\n  // const [initiative, setInitiative] = useState({\n  //   id: initiativeId,\n  //   category: '',\n  //   description: '',\n  // });\n\n  // fetchInitiative(initiativeId, (initiative: Initiative) => {\n  //   initiative.category = initiative.category;\n  //   initiative.description = initiative.description;\n  //   console.log(initiative);\n  // });\n\n  // const onSubmit = (values: Initiative, actions: any) => {\n  //   setTimeout(() => {\n  //     fetch(`https://backend.next-now.site/api/v0/vote/${values.id}`, {\n  //       // TODO: extract host into an env var\n  //       method: 'POST',\n  //       mode: 'cors',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Authorization': localStorage.getItem('token')\n  //       },\n  //       redirect: 'follow',\n  //       referrerPolicy: 'no-referrer',\n  //     })\n  //       .then(response => response.json())\n  //       .then(body => {\n  //         navigate('/wallet');\n  //       });\n  //     actions.setSubmitting(false);\n  //   }, 1000);\n  // };\n\n  return (\n    <>\n      <h1 className=\"mb-8\">{t('Vote for the initiative')}</h1>\n      <p className=\"mb-4\">\n        {t('Please vote for the initiative you decided to participate in.')}\n      </p>\n      <p>Coming soon.</p>\n      {/*<Formik initialValues={initiative} onSubmit={onSubmit}>*/}\n      {/*  {() => (*/}\n      {/*    <Form>*/}\n      {/*      <Submit text=\"Vote for initiative\" />*/}\n      {/*    </Form>*/}\n      {/*  )}*/}\n      {/*</Formik>*/}\n    </>\n  );\n};\n\n// const fetchInitiative = (\n//   id: number,\n//   callback: (response: Initiative) => void\n// ) => {\n//   setTimeout(() => {\n//     // TODO: extract host into an env var\n//     fetch(`https://backend.next-now.site/api/v0/initiative/${id}`, {\n//       method: 'GET',\n//       mode: 'cors',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       redirect: 'follow',\n//       referrerPolicy: 'no-referrer',\n//     })\n//       .then(response => response.json())\n//       .then(body => {\n//         callback(body);\n//       });\n//   }, 1000);\n// };\n\nexport default VoteInitiativePage;\n"],"sourceRoot":""}